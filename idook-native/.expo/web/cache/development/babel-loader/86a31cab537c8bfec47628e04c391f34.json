{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/auth/login/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport logoImg from \"../../assets/idook.png\";\nimport logoCliente from \"../../assets/sindpd.png\";\nimport styles from \"./styles\";\nimport { changeLoginEmail, changeLoginPassword, loginUser } from \"../../store/actions\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"onLoginPress\",\n    value: function onLoginPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      console.log(email, password);\n      this.props.loginUser({\n        email: email,\n        password: password\n      });\n    }\n  }, {\n    key: \"renderMessage\",\n    value: function renderMessage() {\n      if (this.props.error) {\n        return React.createElement(Text, {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }\n        }, this.props.error);\n      } else if (this.props.success) {\n        return React.createElement(Text, {\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }, this.props.success);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: logoCliente,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: {\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Ol\\xE1,\"), React.createElement(Text, {\n        style: styles.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Bem vindo de volta o seu IDook\")), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        value: this.props.email,\n        onChangeText: function onChangeText(text) {\n          return _this.props.changeLoginEmail(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Senha\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        value: this.props.password,\n        onChangeText: function onChangeText(text) {\n          return _this.props.changeLoginPassword(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, this.renderMessage()), React.createElement(TouchableOpacity, {\n        onPress: this.onLoginPress.bind(this),\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, \"Sign in\")), React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 32\n        },\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"Register\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#414959\",\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, \"Ainda n\\xE3o tem um IDook? \", React.createElement(Text, {\n        style: {\n          fontWeight: \"700\",\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 49\n        }\n      }, \"Registrar\"))), React.createElement(View, {\n        style: {\n          alignItems: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.logo2,\n        source: logoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  var email = auth.email,\n      password = auth.password,\n      error = auth.error,\n      success = auth.success,\n      loading = auth.loading;\n  return {\n    email: email,\n    password: password,\n    error: error,\n    success: success,\n    loading: loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeLoginEmail: changeLoginEmail,\n  changeLoginPassword: changeLoginPassword,\n  loginUser: loginUser\n})(LoginScreen);","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/auth/login/index.js"],"names":["React","Component","connect","logoImg","logoCliente","styles","changeLoginEmail","changeLoginPassword","loginUser","LoginScreen","props","email","password","console","log","error","color","success","container","header","logo","alignItems","title","description","form","marginTop","inputTitle","input","text","errorMessage","renderMessage","onLoginPress","bind","button","fontWeight","alignSelf","navigation","navigate","fontSize","logo2","mapStateToProps","auth","loading"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAGA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AAEA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,SAHJ;;IAMMC,W;;;;;;;;;;;;;mCAEa;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACHC,KADG,eACHA,KADG;AAAA,UACIC,QADJ,eACIA,QADJ;AAEXC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,QAAlB;AACA,WAAKF,KAAL,CAAWF,SAAX,CAAqB;AAAEG,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,QAAQ,EAARA;AAAT,OAArB;AACD;;;oCAEe;AACd,UAAI,KAAKF,KAAL,CAAWK,KAAf,EAAsB;AACpB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKN,KAAL,CAAWK,KADd,CADF;AAKD,OAND,MAOK,IAAI,KAAKL,KAAL,CAAWO,OAAf,EAAwB;AAC3B,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKN,KAAL,CAAWO,OADd,CADF;AAKD;AACF;;;6BAGM;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEd,MAAM,CAACe,IAArB;AAA2B,QAAA,MAAM,EAAEhB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,EAKA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACiB,UAAAA,UAAU,EAAC;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACiB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFA,CALA,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAElB,MAAM,CAACmB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACqB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAErB,MAAM,CAACsB,KADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,KAHtB;AAII,QAAA,YAAY,EAAE,sBAACiB,IAAD;AAAA,iBAAU,KAAI,CAAClB,KAAL,CAAWJ,gBAAX,CAA4BsB,IAA5B,CAAV;AAAA,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEH,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACqB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAErB,MAAM,CAACsB,KADlB;AAEI,QAAA,eAAe,MAFnB;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,QAJtB;AAKI,QAAA,YAAY,EAAE,sBAACgB,IAAD;AAAA,iBAAU,KAAI,CAAClB,KAAL,CAAWH,mBAAX,CAA+BqB,IAA/B,CAAV;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,CAXJ,EAkCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKC,aAAL,EADD,CAlCJ,EAwCI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA3B;AAAyD,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEjB,UAAAA,KAAK,EAAE,MAAT;AAAiBkB,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAxCJ,EA4CI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBV,UAAAA,SAAS,EAAE;AAAlC,SADX;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACf,KAAL,CAAW0B,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAErB,UAAAA,KAAK,EAAE,SAAT;AAAoBsB,UAAAA,QAAQ,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAC4B,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEJ,UAAAA,UAAU,EAAE,KAAd;AAAqBlB,UAAAA,KAAK,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAD5B,CAJJ,CA5CJ,EAqDA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,UAAU,EAAC;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEhB,MAAM,CAACkC,KAArB;AAA4B,QAAA,MAAM,EAAEpC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CArDA,CADJ;AA2DH;;;;EAtFqBF,S;;AAyF1B,IAAMuC,eAAe,GAAG,SAAlBA,eAAkB,OAAW;AAAA,MAATC,IAAS,QAATA,IAAS;AAAA,MACvB9B,KADuB,GACsB8B,IADtB,CACvB9B,KADuB;AAAA,MAChBC,QADgB,GACsB6B,IADtB,CAChB7B,QADgB;AAAA,MACNG,KADM,GACsB0B,IADtB,CACN1B,KADM;AAAA,MACCE,OADD,GACsBwB,IADtB,CACCxB,OADD;AAAA,MACUyB,OADV,GACsBD,IADtB,CACUC,OADV;AAI/B,SAAM;AACF/B,IAAAA,KAAK,EAALA,KADE;AAENC,IAAAA,QAAQ,EAARA,QAFM;AAGNG,IAAAA,KAAK,EAALA,KAHM;AAINE,IAAAA,OAAO,EAAPA,OAJM;AAKNyB,IAAAA,OAAO,EAAPA;AALM,GAAN;AAOH,CAXD;;AAaA,eAAexC,OAAO,CAACsC,eAAD,EAAkB;AACpClC,EAAAA,gBAAgB,EAAhBA,gBADoC;AAEpCC,EAAAA,mBAAmB,EAAnBA,mBAFoC;AAGpCC,EAAAA,SAAS,EAATA;AAHoC,CAAlB,CAAP,CAIZC,WAJY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, Image, TextInput, TouchableOpacity } from \"react-native\";\n\nimport { connect } from 'react-redux';\n\nimport logoImg from '../../assets/idook.png';\nimport logoCliente from '../../assets/sindpd.png';\nimport styles from './styles';\n\nimport { \n    changeLoginEmail,\n    changeLoginPassword,\n    loginUser,\n } from '../../store/actions';\n\nclass LoginScreen extends Component {\n\n    onLoginPress() {\n        const { email, password } = this.props;\n        console.log(email,password)\n        this.props.loginUser({ email, password });\n      }\n\n      renderMessage() {\n        if (this.props.error) {\n          return (\n            <Text style={{ color: 'red' }}>\n              {this.props.error}\n            </Text>\n          );\n        }\n        else if (this.props.success) {\n          return (\n            <Text style={{ color: 'green' }}>\n              {this.props.success}\n            </Text>\n          );\n        }\n      }\n\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <View style={styles.header}>\n                <Image style={styles.logo} source={logoCliente} />\n            </View>  \n            \n            <View style={{alignItems:'flex-start'}}>\n            <Text style={styles.title}>Olá,</Text>\n            <Text style={styles.description}>Bem vindo de volta o seu IDook</Text>\n\n            </View>\n\n                <View style={styles.form}>\n                    <View  style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>Email</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            value={this.props.email}\n                            onChangeText={(text) => this.props.changeLoginEmail(text)}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>Senha</Text>\n                        <TextInput\n                            style={styles.input}\n                            secureTextEntry\n                            autoCapitalize=\"none\"\n                            value={this.props.password}\n                            onChangeText={(text) => this.props.changeLoginPassword(text)}\n                        ></TextInput>\n                    </View>\n                </View>\n\n                <View style={styles.errorMessage}>\n                {this.renderMessage()}\n                    \n                </View>\n\n\n                <TouchableOpacity onPress={this.onLoginPress.bind(this)} style={styles.button} >\n                    <Text style={{ color: \"#FFF\", fontWeight: \"500\" }}>Sign in</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={{ alignSelf: \"center\", marginTop: 32 }}\n                    onPress={() => this.props.navigation.navigate(\"Register\")}\n                >\n                    <Text style={{ color: \"#414959\", fontSize: 13 }}>\n                        Ainda não tem um IDook? <Text style={{ fontWeight: \"700\", color: \"#000000\" }}>Registrar</Text>\n                    </Text>\n                </TouchableOpacity>\n\n            <View style={{alignItems:'flex-end'}}>\n                <Image style={styles.logo2} source={logoImg} />\n            </View>\n            </View>\n        );\n    }\n}\n\nconst mapStateToProps = ({auth}) =>{\n    const { email, password, error, success, loading } = auth;\n\n    //console.log(state)\n    return{\n        email,\n    password,\n    error,\n    success,\n    loading\n    };\n}\n\nexport default connect(mapStateToProps, { \n    changeLoginEmail,\n    changeLoginPassword,\n    loginUser\n})(LoginScreen)\n"]},"metadata":{},"sourceType":"module"}