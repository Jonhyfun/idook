{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nvar initState = {\n  authError: null\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      Alert.alert(\"Erro\", \"Verifique o email e a senha\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      return _objectSpread({}, state, {\n        authError: 'Login failed'\n      });\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      ToastAndroid.showWithGravity(\"Bem vindo\", ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n      return _objectSpread({}, state, {\n        authError: null\n      });\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      ToastAndroid.showWithGravity(\"Até breve!\", ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n      return _objectSpread({}, state, {\n        authError: null\n      });\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      ToastAndroid.showWithGravity(\"Conta criada com sucesso\", ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n      return _objectSpread({}, state, {\n        authError: null\n      });\n      return _objectSpread({}, state, {\n        authError: null\n      });\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      Alert.alert(\"Erro\", \"Verifique o email e a senha\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      return _objectSpread({}, state, {\n        authError: action.err.message\n      });\n\n    default:\n      return state;\n\n    case 'EDIT_USER':\n      console.log('edit user');\n      ToastAndroid.showWithGravity(\"Conta editada com sucesso!\", ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n      return _objectSpread({}, state, {\n        authError: null\n      });\n      return state;\n\n    case 'EDIT_USER_ERROR':\n      console.log('edit user error', 'state: ', state, 'action: ', action.id);\n      Alert.alert(\"Erro\", \"Verifique os dados\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-native/src/store/reducers/authReducer.js"],"names":["initState","authError","authReducer","state","action","type","console","log","Alert","alert","text","cancelable","ToastAndroid","showWithGravity","SHORT","BOTTOM","err","message","id"],"mappings":";;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE;AADK,CAAlB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,MAAAA,KAAK,CAACC,KAAN,CACE,MADF,EAEE,6BAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF,EAME;AAAEC,QAAAA,UAAU,EAAE;AAAd,OANF;AAQA,+BACKR,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK,eAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAK,MAAAA,YAAY,CAACC,eAAb,CACE,WADF,EAEED,YAAY,CAACE,KAFf,EAGEF,YAAY,CAACG,MAHf;AAKA,+BACKZ,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK,iBAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAK,MAAAA,YAAY,CAACC,eAAb,CACE,YADF,EAEED,YAAY,CAACE,KAFf,EAGEF,YAAY,CAACG,MAHf;AAKA,+BACKZ,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;AAIA,aAAOE,KAAP;;AAEF,SAAK,gBAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAK,MAAAA,YAAY,CAACC,eAAb,CACE,0BADF,EAEED,YAAY,CAACE,KAFf,EAGEF,YAAY,CAACG,MAHf;AAKA,+BACKZ,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;AAIA,+BACKE,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK,cAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,MAAAA,KAAK,CAACC,KAAN,CACE,MADF,EAEE,6BAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF,EAME;AAAEC,QAAAA,UAAU,EAAE;AAAd,OANF;AAQA,+BACKR,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACY,GAAP,CAAWC;AAFxB;;AAKF;AACE,aAAOd,KAAP;;AAEF,SAAK,WAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAK,MAAAA,YAAY,CAACC,eAAb,CACE,4BADF,EAEED,YAAY,CAACE,KAFf,EAGEF,YAAY,CAACG,MAHf;AAKA,+BACKZ,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;AAIA,aAAOE,KAAP;;AACF,SAAK,iBAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,SAA/B,EAA0CJ,KAA1C,EAAiD,UAAjD,EAA6DC,MAAM,CAACc,EAApE;AACAV,MAAAA,KAAK,CAACC,KAAN,CACE,MADF,EAEE,oBAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF,EAME;AAAEC,QAAAA,UAAU,EAAE;AAAd,OANF;AAQA,aAAOR,KAAP;AAjGJ;AAmGD,CApGD;;AAsGA,eAAeD,WAAf","sourcesContent":["import { Alert, ToastAndroid } from \"react-native\";\n\nconst initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      Alert.alert(\n        \"Erro\",\n        \"Verifique o email e a senha\",\n        [\n          { text: \"OK\"}\n        ],\n        { cancelable: false }\n      );\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      ToastAndroid.showWithGravity(\n        \"Bem vindo\",\n        ToastAndroid.SHORT,\n        ToastAndroid.BOTTOM\n      );\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      ToastAndroid.showWithGravity(\n        \"Até breve!\",\n        ToastAndroid.SHORT,\n        ToastAndroid.BOTTOM\n      );\n      return {\n        ...state,\n        authError: null\n      }\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      ToastAndroid.showWithGravity(\n        \"Conta criada com sucesso\",\n        ToastAndroid.SHORT,\n        ToastAndroid.BOTTOM\n      );\n      return {\n        ...state,\n        authError: null\n      }\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      Alert.alert(\n        \"Erro\",\n        \"Verifique o email e a senha\",\n        [\n          { text: \"OK\"}\n        ],\n        { cancelable: false }\n      );\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n\n    case 'EDIT_USER':\n      console.log('edit user');\n      ToastAndroid.showWithGravity(\n        \"Conta editada com sucesso!\",\n        ToastAndroid.SHORT,\n        ToastAndroid.BOTTOM\n      );\n      return {\n        ...state,\n        authError: null\n      }\n      return state;\n    case 'EDIT_USER_ERROR':\n      console.log('edit user error', 'state: ', state, 'action: ', action.id);\n      Alert.alert(\n        \"Erro\",\n        \"Verifique os dados\",\n        [\n          { text: \"OK\"}\n        ],\n        { cancelable: false }\n      );\n      return state;\n  }\n};\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}