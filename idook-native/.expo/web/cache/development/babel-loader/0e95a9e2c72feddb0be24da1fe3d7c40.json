{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport FirebaseKeys from \"./config\";\nimport firebase from \"firebase\";\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.addPost = function _callee(_ref) {\n      var text, localUri, remoteUri;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              text = _ref.text, localUri = _ref.localUri;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(localUri));\n\n            case 3:\n              remoteUri = _context.sent;\n              return _context.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"posts\").add({\n                  text: text,\n                  uid: _this.uid,\n                  timestamp: _this.timestamp,\n                  image: remoteUri\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                });\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.uploadPhotoAsync = function _callee4(uri) {\n      var path;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              path = \"photos/\" + _this.uid + \"/\" + Date.now() + \".jpg\";\n              return _context4.abrupt(\"return\", new Promise(function _callee3(res, rej) {\n                var response, file, upload;\n                return _regeneratorRuntime.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _regeneratorRuntime.awrap(fetch(uri));\n\n                      case 2:\n                        response = _context3.sent;\n                        _context3.next = 5;\n                        return _regeneratorRuntime.awrap(response.blob());\n\n                      case 5:\n                        file = _context3.sent;\n                        upload = firebase.storage().ref(path).put(file);\n                        upload.on(\"state_changed\", function (snapshot) {}, function (err) {\n                          rej(err);\n                        }, function _callee2() {\n                          var url;\n                          return _regeneratorRuntime.async(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  _context2.next = 2;\n                                  return _regeneratorRuntime.awrap(upload.snapshot.ref.getDownloadURL());\n\n                                case 2:\n                                  url = _context2.sent;\n                                  res(url);\n\n                                case 4:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, null, null, null, Promise);\n                        });\n\n                      case 8:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    firebase.initializeApp(FirebaseKeys);\n  }\n\n  _createClass(Fire, [{\n    key: \"firestore\",\n    get: function get() {\n      return firebase.firestore();\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return Date.now();\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/pages/id/editid/fire.js"],"names":["FirebaseKeys","firebase","Fire","addPost","text","localUri","uploadPhotoAsync","remoteUri","Promise","res","rej","firestore","collection","add","uid","timestamp","image","then","ref","catch","error","uri","path","Date","now","fetch","response","blob","file","upload","storage","put","on","snapshot","err","getDownloadURL","url","initializeApp","auth","currentUser","shared"],"mappings":";;;AAAA,OAAOA,YAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,I;AACF,kBAAc;AAAA;;AAAA;;AAAA,SAIdC,OAJc,GAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,IAAT,QAASA,IAAT,EAAeC,QAAf,QAAeA,QAAf;AAAA;AAAA,+CACkB,KAAI,CAACC,gBAAL,CAAsBD,QAAtB,CADlB;;AAAA;AACAE,cAAAA,SADA;AAAA,+CAGC,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,gBAAA,KAAI,CAACC,SAAL,CACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAES;AACDT,kBAAAA,IAAI,EAAJA,IADC;AAEDU,kBAAAA,GAAG,EAAE,KAAI,CAACA,GAFT;AAGDC,kBAAAA,SAAS,EAAE,KAAI,CAACA,SAHf;AAIDC,kBAAAA,KAAK,EAAET;AAJN,iBAFT,EAQKU,IARL,CAQU,UAAAC,GAAG,EAAI;AACTT,kBAAAA,GAAG,CAACS,GAAD,CAAH;AACH,iBAVL,EAWKC,KAXL,CAWW,UAAAC,KAAK,EAAI;AACZV,kBAAAA,GAAG,CAACU,KAAD,CAAH;AACH,iBAbL;AAcH,eAfM,CAHD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJI;;AAAA,SAyBdd,gBAzBc,GAyBK,kBAAMe,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,IADS,eACQ,KAAI,CAACR,GADb,SACoBS,IAAI,CAACC,GAAL,EADpB;AAAA,gDAGR,IAAIhB,OAAJ,CAAY,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACQe,KAAK,CAACJ,GAAD,CADb;;AAAA;AACTK,wBAAAA,QADS;AAAA;AAAA,yDAEIA,QAAQ,CAACC,IAAT,EAFJ;;AAAA;AAETC,wBAAAA,IAFS;AAIXC,wBAAAA,MAJW,GAIF5B,QAAQ,CAChB6B,OADQ,GAERZ,GAFQ,CAEJI,IAFI,EAGRS,GAHQ,CAGJH,IAHI,CAJE;AASfC,wBAAAA,MAAM,CAACG,EAAP,CACI,eADJ,EAEI,UAAAC,QAAQ,EAAI,CAAE,CAFlB,EAGI,UAAAC,GAAG,EAAI;AACHxB,0BAAAA,GAAG,CAACwB,GAAD,CAAH;AACH,yBALL,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEACsBL,MAAM,CAACI,QAAP,CAAgBf,GAAhB,CAAoBiB,cAApB,EADtB;;AAAA;AACUC,kCAAAA,GADV;AAEI3B,kCAAAA,GAAG,CAAC2B,GAAD,CAAH;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,CAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzBL;;AACVnC,IAAAA,QAAQ,CAACoC,aAAT,CAAuBrC,YAAvB;AACH;;;;wBAiDe;AACZ,aAAOC,QAAQ,CAACU,SAAT,EAAP;AACH;;;wBAES;AACN,aAAO,CAACV,QAAQ,CAACqC,IAAT,GAAgBC,WAAhB,IAA+B,EAAhC,EAAoCzB,GAA3C;AACH;;;wBAEe;AACZ,aAAOS,IAAI,CAACC,GAAL,EAAP;AACH;;;;;;AAGLtB,IAAI,CAACsC,MAAL,GAAc,IAAItC,IAAJ,EAAd;AACA,eAAeA,IAAf","sourcesContent":["import FirebaseKeys from \"./config\";\nimport firebase from \"firebase\";\n\nclass Fire {\n    constructor() {\n        firebase.initializeApp(FirebaseKeys);\n    }\n\n    addPost = async ({ text, localUri }) => {\n        const remoteUri = await this.uploadPhotoAsync(localUri);\n\n        return new Promise((res, rej) => {\n            this.firestore\n                .collection(\"posts\")\n                .add({\n                    text,\n                    uid: this.uid,\n                    timestamp: this.timestamp,\n                    image: remoteUri\n                })\n                .then(ref => {\n                    res(ref);\n                })\n                .catch(error => {\n                    rej(error);\n                });\n        });\n    };\n\n    uploadPhotoAsync = async uri => {\n        const path = `photos/${this.uid}/${Date.now()}.jpg`;\n\n        return new Promise(async (res, rej) => {\n            const response = await fetch(uri);\n            const file = await response.blob();\n\n            let upload = firebase\n                .storage()\n                .ref(path)\n                .put(file);\n\n            upload.on(\n                \"state_changed\",\n                snapshot => {},\n                err => {\n                    rej(err);\n                },\n                async () => {\n                    const url = await upload.snapshot.ref.getDownloadURL();\n                    res(url);\n                }\n            );\n        });\n    };\n\n    get firestore() {\n        return firebase.firestore();\n    }\n\n    get uid() {\n        return (firebase.auth().currentUser || {}).uid;\n    }\n\n    get timestamp() {\n        return Date.now();\n    }\n}\n\nFire.shared = new Fire();\nexport default Fire;"]},"metadata":{},"sourceType":"module"}