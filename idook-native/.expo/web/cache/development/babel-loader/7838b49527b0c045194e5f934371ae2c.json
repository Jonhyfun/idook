{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/pages/id/editid/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ScrollViewImage } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as firebase from \"firebase\";\nimport { Feather } from '@expo/vector-icons';\nimport logoImg from \"../../../assets/idook.png\";\nimport logoCliente from \"../../../assets/sindpd.png\";\nimport styles from \"./styles\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      cpf: \"\",\n      email: \"\",\n      password: \"\",\n      errorMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: logoCliente,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.headerText,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Settings\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, React.createElement(Feather, {\n        name: \"arrow-left\",\n        size: 20,\n        color: \"#91bd36\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Editar\")), React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, \"CPF\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(cpf) {\n          return _this2.setState({\n            cpf: cpf\n          });\n        },\n        value: this.state.cpf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Senha\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"Salvar\")), React.createElement(View, {\n        style: {\n          alignItems: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.logo2,\n        source: logoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/pages/id/editid/index.js"],"names":["React","ScrollViewImage","firebase","Feather","logoImg","logoCliente","styles","LoginScreen","state","cpf","email","password","errorMessage","container","header","logo","headerText","props","navigation","navigate","alignItems","title","form","marginTop","inputTitle","input","setState","button","color","fontWeight","logo2","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;SACqBC,e;;;AACrB,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;;IAEqBC,W;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,GAAG,EAAE,EADD;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,YAAY,EAAE;AAJV,K;;;;;;6BAQC;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAER,MAAM,CAACS,IAArB;AAA2B,QAAA,MAAM,EAAEV,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACU,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,CAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,YAAd;AAA2B,QAAA,IAAI,EAAE,EAAjC;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CADJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAXJ,EAeI,oBAAC,UAAD;AACJ,QAAA,4BAA4B,EAAI,KAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAElB,MAAM,CAACmB,KADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,YAAY,EAAE,sBAAAhB,GAAG;AAAA,iBAAI,MAAI,CAACiB,QAAL,CAAc;AAAEjB,YAAAA,GAAG,EAAHA;AAAF,WAAd,CAAJ;AAAA,SAHrB;AAII,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,GAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEc,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAElB,MAAM,CAACmB,KADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,YAAY,EAAE,sBAAAf,KAAK;AAAA,iBAAI,MAAI,CAACgB,QAAL,CAAc;AAAEhB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAJ;AAAA,SAHvB;AAII,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,EAqBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEa,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAElB,MAAM,CAACmB,KADlB;AAEI,QAAA,eAAe,MAFnB;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,YAAY,EAAE,sBAAAd,QAAQ;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEf,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAJ;AAAA,SAJ1B;AAKI,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArBJ,CAHA,EAsCA,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEL,MAAM,CAACqB,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAtCA,EA2CA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAET,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEd,MAAM,CAACwB,KAArB;AAA4B,QAAA,MAAM,EAAE1B,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA3CA,CAfJ,CADJ;AAkEH;;;;EA5EoCJ,KAAK,CAAC+B,S;;SAA1BxB,W","sourcesContent":["import React from \"react\";\nimport { View, Text, ScrollViewImage, TextInput, TouchableOpacity } from \"react-native\";\nimport * as firebase from \"firebase\";\n\nimport { Feather } from '@expo/vector-icons';\n\nimport logoImg from '../../../assets/idook.png';\nimport logoCliente from '../../../assets/sindpd.png';\nimport styles from './styles';\n\nexport default class LoginScreen extends React.Component {\n    state = {\n        cpf: \"\",\n        email: \"\",\n        password: \"\",\n        errorMessage: null\n    };\n\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <View style={styles.header}>\n                    <Image style={styles.logo} source={logoCliente} />\n\n                    <TouchableOpacity style={styles.headerText} onPress={() => this.props.navigation.navigate(\"Settings\")}>\n                        <Feather name=\"arrow-left\" size={20} color=\"#91bd36\"\n                        />\n                    </TouchableOpacity>\n                </View>\n\n\n                <View style={{ alignItems: 'flex-start' }}>\n                    <Text style={styles.title}>Editar</Text>\n                </View>\n\n                <ScrollView \n            showsVerticalScrollIndicator = {false}>\n\n                <View style={styles.form}>\n                    <View style={{ marginTop: 20 }}>\n                        <Text style={styles.inputTitle}>CPF</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            onChangeText={cpf => this.setState({ cpf })}\n                            value={this.state.cpf}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 20 }}>\n                        <Text style={styles.inputTitle}>Email</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            onChangeText={email => this.setState({ email })}\n                            value={this.state.email}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 20 }}>\n                        <Text style={styles.inputTitle}>Senha</Text>\n                        <TextInput\n                            style={styles.input}\n                            secureTextEntry\n                            autoCapitalize=\"none\"\n                            onChangeText={password => this.setState({ password })}\n                            value={this.state.password}\n                        ></TextInput>\n                    </View>\n                </View>\n\n\n\n                <TouchableOpacity style={styles.button}>\n                    <Text style={{ color: \"#FFF\", fontWeight: \"500\" }}>Salvar</Text>\n                </TouchableOpacity>\n\n\n                <View style={{ alignItems: 'flex-end' }}>\n                    <Image style={styles.logo2} source={logoImg} />\n                </View>\n\n                </ScrollView>\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}