{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook2/idook/idook-native/App.js\";\nimport React from 'react';\nimport Routes from \"./src/routes\";\nimport firebase from \"./src/config/fbConfig\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport UserProvider from \"./src/config/UserProvider.\";\nimport \"./yellowtime\";\nimport rootReducer from \"./src/store/reducers/rootReducer\";\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar rrfConfig = {\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true,\n  userProfile: 'users',\n  attachAuthIsReady: true\n};\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk.withExtraArgument({\n  getFirebase: getFirebase,\n  getFirestore: getFirestore\n})), reduxFirestore(firebase)));\nvar rrfProps = {\n  firebase: firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance: createFirestoreInstance\n};\nexport default function App() {\n  return React.createElement(UserProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(ReactReduxFirebaseProvider, _extends({}, rrfProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook2/idook/idook-native/App.js"],"names":["React","Routes","firebase","createStore","applyMiddleware","compose","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","Provider","thunk","UserProvider","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rrfConfig","useFirestoreForProfile","attachAuthIsReady","userProfile","store","withExtraArgument","rrfProps","config","dispatch","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,YAAlD,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,YAAP;AAEA;AAEA,OAAOC,WAAP;AAIA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AAGA,IAAMa,SAAS,GAAG;AAChBC,EAAAA,sBAAsB,EAAE,IADR;AAEhBC,EAAAA,iBAAiB,EAAE,IAFH;AAGhBC,EAAAA,WAAW,EAAE,OAHG;AAIhBD,EAAAA,iBAAiB,EAAE;AAJH,CAAlB;AAOA,IAAME,KAAK,GAAGnB,WAAW,CAACW,WAAD,EACvBC,gBAAgB,CACdX,eAAe,CAACQ,KAAK,CAACW,iBAAN,CAAwB;AAAEb,EAAAA,WAAW,EAAXA,WAAF;AAAeF,EAAAA,YAAY,EAAZA;AAAf,CAAxB,CAAD,CADD,EAEdD,cAAc,CAACL,QAAD,CAFA,CADO,CAAzB;AAMA,IAAMsB,QAAQ,GAAG;AACftB,EAAAA,QAAQ,EAARA,QADe;AAEfuB,EAAAA,MAAM,EAAEP,SAFO;AAGfQ,EAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHD;AAIfpB,EAAAA,uBAAuB,EAAvBA;AAJe,CAAjB;AASA,eAAe,SAASqB,GAAT,GAAe;AAC5B,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,0BAAD,eAAgCE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADA,CADF;AAUD","sourcesContent":["import React from 'react';\nimport Routes from './src/routes';\nimport firebase from './src/config/fbConfig';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\n\nimport UserProvider from './src/config/UserProvider.'\n\nimport \"./yellowtime\"\n\nimport rootReducer from './src/store/reducers/rootReducer';\n\n// We enhance compose in order to use Redux DevTools extension\n// https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\nconst rrfConfig = {\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  attachAuthIsReady: true,\n  userProfile: 'users',\n  attachAuthIsReady: true,\n};\n\nconst store = createStore(rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n  ));\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n};\n\n\n\nexport default function App() {\n  return (\n    <UserProvider>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <Routes />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n    </UserProvider>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}