{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport * as firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          profile = _this$props.profile;\n      console.log(profile);\n\n      if (auth.uid) {\n        if (profile.token) {\n          if (profile.confirm) {\n            this.props.navigation.navigate(\"Inicial\");\n          } else {\n            this.props.navigation.navigate(\"EditID\");\n          }\n        } else {\n          this.props.navigation.navigate(\"Token\");\n        }\n      } else {\n        this.props.navigation.navigate(\"Login\");\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"Carregando...\"), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps, null)(LoadingScreen);","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js"],"names":["React","Component","styles","firebase","connect","compose","firebaseConnect","LoadingScreen","props","auth","profile","console","log","uid","token","confirm","navigation","navigate","container","mapStateToProps","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,MAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;IAEMC,a;;;;;;;;;;;;;6BAGK;AAAA,wBAEiB,KAAKC,KAFtB;AAAA,UAEAC,IAFA,eAEAA,IAFA;AAAA,UAEMC,OAFN,eAEMA,OAFN;AAIPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,UAAGD,IAAI,CAACI,GAAR,EAAY;AACR,YAAGH,OAAO,CAACI,KAAX,EAAiB;AACb,cAAGJ,OAAO,CAACK,OAAX,EAAmB;AACf,iBAAKP,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACH,WAFD,MAGK;AACD,iBAAKT,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACH;AAEJ,SARD,MASI;AACA,eAAKT,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACH;AAEJ,OAdD,MAcO;AACH,aAAKT,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACH;;AAED,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOA;;;;EAlCwBjB,S;;AAwC5B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/BT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,SAAM;AACFX,IAAAA,IAAI,EAAEW,KAAK,CAACjB,QAAN,CAAeM,IADnB;AAEFC,IAAAA,OAAO,EAAEU,KAAK,CAACjB,QAAN,CAAeO;AAFtB,GAAN;AAID,CAPH;;AAUE,eAAeN,OAAO,CAACe,eAAD,EAAkB,IAAlB,CAAP,CAAgCZ,aAAhC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { View, Text, ActivityIndicator } from \"react-native\"\nimport styles from './styles';\nimport * as firebase from 'firebase'\n\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nclass LoadingScreen extends Component{\n\n   \n   render(){\n\n    const {auth, profile} = this.props;\n\n    console.log(profile)\n\n    if(auth.uid){\n        if(profile.token){\n            if(profile.confirm){\n                this.props.navigation.navigate(\"Inicial\");\n            }\n            else {\n                this.props.navigation.navigate(\"EditID\");\n            }\n            \n        }\n        else{\n            this.props.navigation.navigate(\"Token\");\n        }\n        \n    } else {\n        this.props.navigation.navigate(\"Login\");\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text>Carregando...</Text>\n            <ActivityIndicator size='large'></ActivityIndicator>\n        </View>\n\n    )\n   }\n        \n\n    \n}\n\nconst mapStateToProps = (state) => {\n\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    }\n  }\n  \n\n  export default connect(mapStateToProps, null) (LoadingScreen)"]},"metadata":{},"sourceType":"module"}