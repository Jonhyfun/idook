{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nvar initState = {\n  authError: null\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      Alert.alert(\"ERRO\", \"verifique o email e a senha\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      return _objectSpread({}, state, {\n        authError: 'Login failed'\n      });\n\n    case 'LOGIN_SUCCESS':\n      ToastAndroid.showWithGravityAndOffset(\"Bem vindo!\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n      return _objectSpread({}, state, {\n        authError: null\n      });\n\n    case 'SIGNOUT_SUCCESS':\n      ToastAndroid.showWithGravityAndOffset(\"Até breve!\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      ToastAndroid.showWithGravityAndOffset(\"Conta criada com sucesso!\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n      return _objectSpread({}, state, {\n        authError: null\n      });\n\n    case 'SIGNUP_ERROR':\n      Alert.alert(\"ERRO\", \"verifique seus dados\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      return _objectSpread({}, state, {\n        authError: action.err.message\n      });\n\n    default:\n      return state;\n\n    case 'EDIT_USER':\n      ToastAndroid.showWithGravityAndOffset(\"Conta editada com sucesso!\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n      return state;\n\n    case 'EDIT_USER_ERROR':\n      Alert.alert(\"ERRO\", \"Verifique os dados e tente novamente\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-native/src/store/reducers/authReducer.js"],"names":["initState","authError","authReducer","state","action","type","Alert","alert","text","cancelable","ToastAndroid","showWithGravityAndOffset","LONG","BOTTOM","err","message"],"mappings":";;;;;;;;AAKA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE;AADK,CAAlB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AAEAC,MAAAA,KAAK,CAACC,KAAN,CACE,MADF,EAEE,6BAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF,EAME;AAAEC,QAAAA,UAAU,EAAE;AAAd,OANF;AAUE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK,eAAL;AAECS,MAAAA,YAAY,CAACC,wBAAb,CACC,YADD,EAECD,YAAY,CAACE,IAFd,EAGCF,YAAY,CAACG,MAHd,EAIC,EAJD,EAKC,EALD;AAOC,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK,iBAAL;AAEES,MAAAA,YAAY,CAACC,wBAAb,CACE,YADF,EAEED,YAAY,CAACE,IAFf,EAGEF,YAAY,CAACG,MAHf,EAIE,EAJF,EAKE,EALF;AAOA,aAAOV,KAAP;;AAEF,SAAK,gBAAL;AAEEO,MAAAA,YAAY,CAACC,wBAAb,CACE,2BADF,EAEED,YAAY,CAACE,IAFf,EAGEF,YAAY,CAACG,MAHf,EAIE,EAJF,EAKE,EALF;AAOA,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK,cAAL;AACEK,MAAAA,KAAK,CAACC,KAAN,CACE,MADF,EAEE,sBAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF,EAME;AAAEC,QAAAA,UAAU,EAAE;AAAd,OANF;AAQA,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACU,GAAP,CAAWC;AAFxB;;AAKF;AACE,aAAOZ,KAAP;;AAEF,SAAK,WAAL;AAEEO,MAAAA,YAAY,CAACC,wBAAb,CACE,4BADF,EAEED,YAAY,CAACE,IAFf,EAGEF,YAAY,CAACG,MAHf,EAIE,EAJF,EAKE,EALF;AAOA,aAAOV,KAAP;;AACF,SAAK,iBAAL;AAEEG,MAAAA,KAAK,CAACC,KAAN,CACE,MADF,EAEE,sCAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF,EAME;AAAEC,QAAAA,UAAU,EAAE;AAAd,OANF;AAQA,aAAON,KAAP;AA9FJ;AAgGD,CAjGD;;AAmGA,eAAeD,WAAf","sourcesContent":["\nimport { Alert, ToastAndroid } from \"react-native\";\n\n\n\nconst initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n    //  MerryToast.showWithGravity('All Your Base Are Belong To Us', MerryToast.SHORT, MerryToast.CENTER);\n    Alert.alert(\n      \"ERRO\",\n      \"verifique o email e a senha\",\n      [\n        { text: \"OK\" }\n      ],\n      { cancelable: false }\n    );\n\n     // console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n     // console.log('login success');\n     ToastAndroid.showWithGravityAndOffset(\n      \"Bem vindo!\",\n      ToastAndroid.LONG,\n      ToastAndroid.BOTTOM,\n      25,\n      50\n    );\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      //console.log('signout success');\n      ToastAndroid.showWithGravityAndOffset(\n        \"Até breve!\",\n        ToastAndroid.LONG,\n        ToastAndroid.BOTTOM,\n        25,\n        50\n      );\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      //console.log('signup success')\n      ToastAndroid.showWithGravityAndOffset(\n        \"Conta criada com sucesso!\",\n        ToastAndroid.LONG,\n        ToastAndroid.BOTTOM,\n        25,\n        50\n      );\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      Alert.alert(\n        \"ERRO\",\n        \"verifique seus dados\",\n        [\n          { text: \"OK\" }\n        ],\n        { cancelable: false }\n      );\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n\n    case 'EDIT_USER':\n      //console.log('edit user');\n      ToastAndroid.showWithGravityAndOffset(\n        \"Conta editada com sucesso!\",\n        ToastAndroid.LONG,\n        ToastAndroid.BOTTOM,\n        25,\n        50\n      );\n      return state;\n    case 'EDIT_USER_ERROR':\n      //console.log('edit user error', 'state: ', state, 'action: ', action.id);\n      Alert.alert(\n        \"ERRO\",\n        \"Verifique os dados e tente novamente\",\n        [\n          { text: \"OK\" }\n        ],\n        { cancelable: false }\n      );\n      return state;\n  }\n};\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}