{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport * as firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          profile = _this$props.profile;\n      console.log(auth.uid);\n\n      if (auth.uid) {\n        this.navigation.navigate(\"Inicial\");\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, \"Carregando...\"), React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }));\n      }\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps, null)(LoadingScreen);","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js"],"names":["React","Component","styles","firebase","connect","compose","firebaseConnect","LoadingScreen","props","auth","profile","console","log","uid","navigation","navigate","container","mapStateToProps","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,MAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;IAEMC,a;;;;;;;;;;;;;6BAGK;AAAA,wBAEiB,KAAKC,KAFtB;AAAA,UAEAC,IAFA,eAEAA,IAFA;AAAA,UAEMC,OAFN,eAEMA,OAFN;AAIPC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAjB;;AAEA,UAAGJ,IAAI,CAACI,GAAR,EAAY;AAER,aAAKC,UAAL,CAAgBC,QAAhB,CAAyB,SAAzB;AAEH,OAJD,MAIO;AAEH,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAOA;AAEH;;;;EAxBuBf,S;;AAmC5B,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/BP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,SAAM;AACFT,IAAAA,IAAI,EAAES,KAAK,CAACf,QAAN,CAAeM,IADnB;AAEFC,IAAAA,OAAO,EAAEQ,KAAK,CAACf,QAAN,CAAeO;AAFtB,GAAN;AAID,CAPH;;AAUE,eAAeN,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAAgCV,aAAhC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { View, Text, ActivityIndicator } from \"react-native\"\nimport styles from './styles';\nimport * as firebase from 'firebase'\n\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nclass LoadingScreen extends Component{\n\n   \n   render(){\n\n    const {auth, profile} = this.props;\n\n    console.log(auth.uid)\n\n    if(auth.uid){\n\n        this.navigation.navigate(\"Inicial\");\n\n    } else {\n\n        return (\n            <View style={styles.container}>\n                <Text>Carregando...</Text>\n                <ActivityIndicator size='large'></ActivityIndicator>\n            </View>\n    \n        )\n       }\n\n    }\n\n    \n\n\n    \n        \n\n    \n}\n\nconst mapStateToProps = (state) => {\n\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    }\n  }\n  \n\n  export default connect(mapStateToProps, null) (LoadingScreen)\n\n"]},"metadata":{},"sourceType":"module"}