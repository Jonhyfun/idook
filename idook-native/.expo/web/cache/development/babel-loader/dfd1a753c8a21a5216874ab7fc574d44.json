{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/IDOOK-GIT/idook/idook-native/src/pages/events/play/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Permissions } from 'react-native-unimodules';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { useNavigation } from '@react-navigation/native';\n\nvar BarcodeScannerExample = function BarcodeScannerExample() {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasCameraPermission = _useState2[0],\n      setCameraPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animationLineHeight = _useState6[0],\n      setAnimationLineHeight = _useState6[1];\n\n  var _useState7 = useState(new Animated.Value(0)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      focusLineAnimation = _useState8[0],\n      setFocusLineAnimation = _useState8[1];\n\n  useEffect(function () {\n    getPermissionsAsync();\n    animateLine();\n  }, []);\n\n  var animateLine = function animateLine() {\n    Animated.sequence([Animated.timing(focusLineAnimation, {\n      toValue: 1,\n      duration: 1000\n    }), Animated.timing(focusLineAnimation, {\n      toValue: 0,\n      duration: 1000\n    })]).start(animateLine);\n  };\n\n  var getPermissionsAsync = function getPermissionsAsync() {\n    var _await$Permissions$as, status, isPermissionGranted;\n\n    return _regeneratorRuntime.async(function getPermissionsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n            isPermissionGranted = status === 'granted';\n            console.log(isPermissionGranted);\n            setCameraPermission(isPermissionGranted);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    alert(\"Entrada autorizada\");\n    navigation.goBack();\n  };\n\n  if (hasCameraPermission === null) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Requesting for camera permission\"));\n  }\n\n  if (hasCameraPermission === false) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"No access to camera\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFillObject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.unfocusedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.middleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.unfocusedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    onLayout: function onLayout(e) {\n      return setAnimationLineHeight(e.nativeEvent.layout.height);\n    },\n    style: styles.focusedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, !scanned && React.createElement(Animated.View, {\n    style: [styles.animationLineStyle, {\n      transform: [{\n        translateY: focusLineAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, animationLineHeight]\n        })\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), scanned && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    style: styles.rescanIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.unfocusedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.unfocusedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  unfocusedContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.7)'\n  },\n  middleContainer: {\n    flexDirection: 'row',\n    flex: 1.5\n  },\n  focusedContainer: {\n    flex: 6\n  },\n  animationLineStyle: {\n    height: 2,\n    width: '100%',\n    backgroundColor: 'red'\n  },\n  rescanIconContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default BarcodeScannerExample;","map":{"version":3,"sources":["/home/thabataganga/Documentos/IDOOK-GIT/idook/idook-native/src/pages/events/play/index.js"],"names":["React","useState","useEffect","Permissions","BarCodeScanner","useNavigation","BarcodeScannerExample","navigation","hasCameraPermission","setCameraPermission","scanned","setScanned","animationLineHeight","setAnimationLineHeight","Animated","Value","focusLineAnimation","setFocusLineAnimation","getPermissionsAsync","animateLine","sequence","timing","toValue","duration","start","askAsync","CAMERA","status","isPermissionGranted","console","log","handleBarCodeScanned","type","data","alert","goBack","flex","alignItems","justifyContent","styles","container","undefined","StyleSheet","absoluteFillObject","overlay","unfocusedContainer","middleContainer","e","nativeEvent","layout","height","focusedContainer","animationLineStyle","transform","translateY","interpolate","inputRange","outputRange","rescanIconContainer","create","position","top","left","right","bottom","backgroundColor","flexDirection","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,IAAMC,qBAAuC,GAAG,SAA1CA,qBAA0C,GAAM;AAElD,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AAFkD,kBAICJ,QAAQ,CAAC,IAAD,CAJT;AAAA;AAAA,MAI3CO,mBAJ2C;AAAA,MAItBC,mBAJsB;;AAAA,mBAKpBR,QAAQ,CAAC,KAAD,CALY;AAAA;AAAA,MAK3CS,OAL2C;AAAA,MAKlCC,UALkC;;AAAA,mBAMIV,QAAQ,CAAC,CAAD,CANZ;AAAA;AAAA,MAM3CW,mBAN2C;AAAA,MAMtBC,sBANsB;;AAAA,mBAOEZ,QAAQ,CACxD,IAAIa,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADwD,CAPV;AAAA;AAAA,MAO3CC,kBAP2C;AAAA,MAOvBC,qBAPuB;;AAUlDf,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,mBAAmB;AACnBC,IAAAA,WAAW;AACd,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBL,IAAAA,QAAQ,CAACM,QAAT,CAAkB,CACdN,QAAQ,CAACO,MAAT,CAAgBL,kBAAhB,EAAoC;AAChCM,MAAAA,OAAO,EAAE,CADuB;AAEhCC,MAAAA,QAAQ,EAAE;AAFsB,KAApC,CADc,EAKdT,QAAQ,CAACO,MAAT,CAAgBL,kBAAhB,EAAoC;AAChCM,MAAAA,OAAO,EAAE,CADuB;AAEhCC,MAAAA,QAAQ,EAAE;AAFsB,KAApC,CALc,CAAlB,EASGC,KATH,CASSL,WATT;AAUH,GAXD;;AAYA,MAAMD,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCf,WAAW,CAACsB,QAAZ,CAAqBtB,WAAW,CAACuB,MAAjC,CADD;;AAAA;AAAA;AAChBC,YAAAA,MADgB,yBAChBA,MADgB;AAElBC,YAAAA,mBAFkB,GAEID,MAAM,KAAK,SAFf;AAGxBE,YAAAA,OAAO,CAACC,GAAR,CAAYF,mBAAZ;AACAnB,YAAAA,mBAAmB,CAACmB,mBAAD,CAAnB;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAMA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAoB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC7CtB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAuB,IAAAA,KAAK,sBAAL;AACA3B,IAAAA,UAAU,CAAC4B,MAAX;AACH,GAJD;;AAKA,MAAI3B,mBAAmB,KAAK,IAA5B,EAAkC;AAC9B,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE4B,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,UAAU,EAAE,QAAvB;AAAiCC,QAAAA,cAAc,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CADJ;AAKH;;AACD,MAAI9B,mBAAmB,KAAK,KAA5B,EAAmC;AAC/B,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE4B,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,UAAU,EAAE,QAAvB;AAAiCC,QAAAA,cAAc,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAKH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,gBAAgB,EAAE9B,OAAO,GAAG+B,SAAH,GAAeV,oBAD5C;AAEI,IAAA,KAAK,EAAEW,UAAU,CAACC,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACM,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,aAAIlC,sBAAsB,CAACkC,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBC,MAAtB,CAA1B;AAAA,KADf;AAEI,IAAA,KAAK,EAAEX,MAAM,CAACY,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK,CAACzC,OAAD,IACG,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE,CACH6B,MAAM,CAACa,kBADJ,EAEH;AACIC,MAAAA,SAAS,EAAE,CACP;AACIC,QAAAA,UAAU,EAAEtC,kBAAkB,CAACuC,WAAnB,CAA+B;AACvCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD2B;AAEvCC,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI7C,mBAAJ;AAF0B,SAA/B;AADhB,OADO;AADf,KAFG,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAoBKF,OAAO,IACJ,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA,KADb;AAEI,IAAA,KAAK,EAAE4B,MAAM,CAACmB,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBR,CAFJ,EA8BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACM,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CAFJ,EAkCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,CALJ,CADJ;AA4CH,CA/FD;;AAgGA,IAAMN,MAAM,GAAGG,UAAU,CAACiB,MAAX,CAAkB;AAC7BnB,EAAAA,SAAS,EAAE;AACPJ,IAAAA,IAAI,EAAE,CADC;AAEPwB,IAAAA,QAAQ,EAAE;AAFH,GADkB;AAK7BhB,EAAAA,OAAO,EAAE;AACLgB,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,GAAG,EAAE,CAFA;AAGLC,IAAAA,IAAI,EAAE,CAHD;AAILC,IAAAA,KAAK,EAAE,CAJF;AAKLC,IAAAA,MAAM,EAAE;AALH,GALoB;AAY7BnB,EAAAA,kBAAkB,EAAE;AAChBT,IAAAA,IAAI,EAAE,CADU;AAEhB6B,IAAAA,eAAe,EAAE;AAFD,GAZS;AAgB7BnB,EAAAA,eAAe,EAAE;AACboB,IAAAA,aAAa,EAAE,KADF;AAEb9B,IAAAA,IAAI,EAAE;AAFO,GAhBY;AAoB7Be,EAAAA,gBAAgB,EAAE;AACdf,IAAAA,IAAI,EAAE;AADQ,GApBW;AAuB7BgB,EAAAA,kBAAkB,EAAE;AAChBF,IAAAA,MAAM,EAAE,CADQ;AAEhBiB,IAAAA,KAAK,EAAE,MAFS;AAGhBF,IAAAA,eAAe,EAAE;AAHD,GAvBS;AA4B7BP,EAAAA,mBAAmB,EAAE;AACjBtB,IAAAA,IAAI,EAAE,CADW;AAEjBC,IAAAA,UAAU,EAAE,QAFK;AAGjBC,IAAAA,cAAc,EAAE;AAHC;AA5BQ,CAAlB,CAAf;AAkCA,eAAehC,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Text,\n    View,\n    StyleSheet,\n    Animated,\n    TouchableOpacity,\n} from 'react-native'\nimport { Permissions } from 'react-native-unimodules'\nimport { BarCodeScanner } from 'expo-barcode-scanner'\n\nimport { useNavigation } from '@react-navigation/native';\n\nconst BarcodeScannerExample: () => React$Node = () => {\n\n    const navigation = useNavigation();\n\n    const [hasCameraPermission, setCameraPermission] = useState(null)\n    const [scanned, setScanned] = useState(false)\n    const [animationLineHeight, setAnimationLineHeight] = useState(0)\n    const [focusLineAnimation, setFocusLineAnimation] = useState(\n        new Animated.Value(0),\n    )\n    useEffect(() => {\n        getPermissionsAsync()\n        animateLine()\n    }, [])\n    const animateLine = () => {\n        Animated.sequence([\n            Animated.timing(focusLineAnimation, {\n                toValue: 1,\n                duration: 1000,\n            }),\n            Animated.timing(focusLineAnimation, {\n                toValue: 0,\n                duration: 1000,\n            }),\n        ]).start(animateLine)\n    }\n    const getPermissionsAsync = async () => {\n        const { status } = await Permissions.askAsync(Permissions.CAMERA)\n        const isPermissionGranted = status === 'granted'\n        console.log(isPermissionGranted)\n        setCameraPermission(isPermissionGranted)\n    }\n    const handleBarCodeScanned = ({ type, data }) => {\n        setScanned(true)\n        alert(`Entrada autorizada`)\n        navigation.goBack();\n    }\n    if (hasCameraPermission === null) {\n        return (\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n                <Text>Requesting for camera permission</Text>\n            </View>\n        )\n    }\n    if (hasCameraPermission === false) {\n        return (\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n                <Text>No access to camera</Text>\n            </View>\n        )\n    }\n    return (\n        <View style={styles.container}>\n            <BarCodeScanner\n                onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n                style={StyleSheet.absoluteFillObject}\n            />\n            <View style={styles.overlay}>\n                <View style={styles.unfocusedContainer}></View>\n                <View style={styles.middleContainer}>\n                    <View style={styles.unfocusedContainer}></View>\n                    <View\n                        onLayout={e => setAnimationLineHeight(e.nativeEvent.layout.height)}\n                        style={styles.focusedContainer}>\n                        {!scanned && (\n                            <Animated.View\n                                style={[\n                                    styles.animationLineStyle,\n                                    {\n                                        transform: [\n                                            {\n                                                translateY: focusLineAnimation.interpolate({\n                                                    inputRange: [0, 1],\n                                                    outputRange: [0, animationLineHeight],\n                                                }),\n                                            },\n                                        ],\n                                    },\n                                ]}\n                            />\n                        )}\n                        {scanned && (\n                            <TouchableOpacity\n                                onPress={() => setScanned(false)}\n                                style={styles.rescanIconContainer}>\n                                \n                            </TouchableOpacity>\n                        )}\n                    </View>\n                    <View style={styles.unfocusedContainer}></View>\n                </View>\n                <View style={styles.unfocusedContainer}></View>\n            </View>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        position: 'relative',\n    },\n    overlay: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    unfocusedContainer: {\n        flex: 1,\n        backgroundColor: 'rgba(0,0,0,0.7)',\n    },\n    middleContainer: {\n        flexDirection: 'row',\n        flex: 1.5,\n    },\n    focusedContainer: {\n        flex: 6,\n    },\n    animationLineStyle: {\n        height: 2,\n        width: '100%',\n        backgroundColor: 'red',\n    },\n    rescanIconContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n})\nexport default BarcodeScannerExample"]},"metadata":{},"sourceType":"module"}