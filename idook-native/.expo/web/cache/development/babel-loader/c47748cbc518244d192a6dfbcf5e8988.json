{"ast":null,"code":"var _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/App.js\";\nimport React from 'react';\nimport Routes from \"./src/routes\";\nimport fbConfig from \"./src/config/fbConfig\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./src/store/reducers/rootReducer\";\nimport * as serviceWorker from \"./serviceWorker\";\nvar store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase: getFirebase,\n  getFirestore: getFirestore\n})), reduxFirestore(fbConfig), reactReduxFirebase(fbConfig)));\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n}\nconsole.log('store', store);\nconsole.log('state', store.getState());\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/App.js"],"names":["React","Routes","fbConfig","createStore","applyMiddleware","compose","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","Provider","thunk","rootReducer","serviceWorker","store","withExtraArgument","App","console","log","getState","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA8C,iBAA9C;AAAgE,SAASC,kBAAT,EAA6BC,WAA7B,QAAiD,sBAAjD;AAAwE,SAASC,QAAT,QAAyB,aAAzB;AACxI,OAAOC,KAAP,MAAkB,aAAlB;AAIA,OAAOC,WAAP;AAEA,OAAO,KAAKC,aAAZ;AASA,IAAMC,KAAK,GAAGX,WAAW,CAACS,WAAD,EACvBP,OAAO,CAACD,eAAe,CAACO,KAAK,CAACI,iBAAN,CAAwB;AAACN,EAAAA,WAAW,EAAXA,WAAD;AAAaF,EAAAA,YAAY,EAAZA;AAAb,CAAxB,CAAD,CAAhB,EACND,cAAc,CAACJ,QAAD,CADR,EAENM,kBAAkB,CAACN,QAAD,CAFZ,CADgB,CAAzB;AAQA,eAAe,SAASc,GAAT,GAAe;AAC5B,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAQD;AAEDG,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACAG,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAAK,CAACK,QAAN,EAArB;AAKAN,aAAa,CAACO,UAAd","sourcesContent":["import React from 'react';\nimport Routes from './src/routes';\nimport fbConfig from './src/config/fbConfig';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { reduxFirestore, getFirestore } from  'redux-firestore';import { reactReduxFirebase, getFirebase } from  'react-redux-firebase';import { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\n\n\n\nimport rootReducer from './src/store/reducers/rootReducer';\n\nimport * as serviceWorker from './serviceWorker';\n\n//import reducers from './src/store/reducers'\n\n//const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n//console.log(store)\n\n\nconst store = createStore(rootReducer, \n  compose(applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore })),\n   reduxFirestore(fbConfig),\n   reactReduxFirebase(fbConfig)\n  )\n);\n\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      \n        <Routes />\n      \n    </Provider>\n\n  );\n}\n\nconsole.log('store', store);\nconsole.log('state', store.getState());\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}