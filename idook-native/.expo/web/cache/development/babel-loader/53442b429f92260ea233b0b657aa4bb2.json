{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Feather, FontAwesome } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nvar Detail = function (_React$Component) {\n  _inherits(Detail, _React$Component);\n\n  var _super = _createSuper(Detail);\n\n  function Detail() {\n    _classCallCheck(this, Detail);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Detail, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          profile = _this$props.profile,\n          ids = _this$props.ids,\n          users = _this$props.users;\n\n      if (users) {\n        this.props.navigation.navigate(\"Inicial\");\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"Carregando...\"), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Detail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n    ids: state.firestore.ordered.ids,\n    users: state.firestore.ordered.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    editId: function (_editId) {\n      function editId(_x, _x2) {\n        return _editId.apply(this, arguments);\n      }\n\n      editId.toString = function () {\n        return _editId.toString();\n      };\n\n      return editId;\n    }(function (ids, id) {\n      return dispatch(editId(ids, id));\n    })\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: 'ids'\n}, {\n  collection: 'users'\n}]))(Detail);","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js"],"names":["React","Feather","FontAwesome","styles","firestoreConnect","connect","compose","Detail","props","auth","profile","ids","users","navigation","navigate","container","Component","mapStateToProps","state","console","log","firebase","firestore","ordered","mapDispatchToProps","dispatch","editId","id","collection"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,oBAArC;;;;;;;AAGA,OAAOC,MAAP;AAGA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;;IAIMC,M;;;;;;;;;;;;;6BAEO;AAAA,wBAEiC,KAAKC,KAFtC;AAAA,UAEGC,IAFH,eAEGA,IAFH;AAAA,UAESC,OAFT,eAESA,OAFT;AAAA,UAEkBC,GAFlB,eAEkBA,GAFlB;AAAA,UAEuBC,KAFvB,eAEuBA,KAFvB;;AAKL,UAAIA,KAAJ,EAAW;AAEP,aAAKJ,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AAEH;;AAGD,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACY,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOH;;;;EArBgBf,KAAK,CAACgB,S;;AA4B3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACHT,IAAAA,IAAI,EAAES,KAAK,CAACG,QAAN,CAAeZ,IADlB;AAEHC,IAAAA,OAAO,EAAEQ,KAAK,CAACG,QAAN,CAAeX,OAFrB;AAGHC,IAAAA,GAAG,EAAEO,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwBZ,GAH1B;AAIHC,IAAAA,KAAK,EAAEM,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwBX;AAJ5B,GAAP;AAMH,CATD;;AAWA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,MAAM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE,UAACf,GAAD,EAAMgB,EAAN;AAAA,aAAaF,QAAQ,CAACC,MAAM,CAACf,GAAD,EAAMgB,EAAN,CAAP,CAArB;AAAA,KAAF;AADH,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CAClBD,OAAO,CAACY,eAAD,EAAkBO,kBAAlB,CADW,EAElBpB,gBAAgB,CAAC,CACb;AAAEwB,EAAAA,UAAU,EAAE;AAAd,CADa,EAEb;AAAEA,EAAAA,UAAU,EAAE;AAAd,CAFa,CAAD,CAFE,CAAP,CAMbrB,MANa,CAAf","sourcesContent":["import React from 'react';\nimport { Feather, FontAwesome } from '@expo/vector-icons';\nimport { View, Image, ScrollView, Text, TouchableOpacity, ActivityIndicator } from 'react-native';\n\nimport styles from './styles';\n\n\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\n\n\nclass Detail extends React.Component {\n\n    render() {\n\n        const { auth, profile, ids, users } = this.props\n       \n\n        if (users) {\n\n            this.props.navigation.navigate(\"Inicial\");\n            \n        }\n\n\n        return (\n            <View style={styles.container}>\n                <Text>Carregando...</Text>\n                <ActivityIndicator size='large'></ActivityIndicator>\n            </View>\n\n        )\n    }\n\n\n\n}\n\n\nconst mapStateToProps = (state) => {\n\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n        ids: state.firestore.ordered.ids,\n        users: state.firestore.ordered.users,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        editId: (ids, id) => dispatch(editId(ids, id))\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'ids' },\n        { collection: 'users' }\n    ])\n)(Detail)"]},"metadata":{},"sourceType":"module"}