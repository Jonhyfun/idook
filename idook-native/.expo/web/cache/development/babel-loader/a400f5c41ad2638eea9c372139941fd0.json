{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }, \"Carregando...\"));\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nexport { LoadingScreen as default };","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js"],"names":["React","styles","LoadingScreen","style","container","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,MAAP;;IAEqBC,a;;;;;;;;;;;;;6BACR;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,KAAK,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAOH;;;;EATsCJ,KAAK,CAACK,S;;SAA5BH,a","sourcesContent":["import React from 'react';\nimport { View, Text } from \"react-native\"\nimport styles from './styles';\n\nexport default class LoadingScreen extends React.Component {\n    render() {\n        return (\n            <View style={style.container}>\n                <Text>Carregando...</Text>\n            </View>\n\n        )\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}