{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport * as firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log(_this.props.profile);\n\n        if (!user) {\n          _this.props.navigation.navigate(\"Login\");\n        } else {\n          _this.props.navigation.navigate(user.eb ? \"Inicial\" : \"Token\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Carregando...\"), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps, null)(LoadingScreen);","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/screens/index.js"],"names":["React","Component","styles","firebase","connect","compose","firebaseConnect","LoadingScreen","auth","onAuthStateChanged","user","console","log","props","profile","navigation","navigate","eb","container","mapStateToProps","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,MAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;IAEMC,a;;;;;;;;;;;;;wCAEkB;AAAA;;AAEhBJ,MAAAA,QAAQ,CAACK,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAL,CAAWC,OAAvB;;AACC,YAAG,CAACJ,IAAJ,EAAS;AACL,UAAA,KAAI,CAACG,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACH,SAFD,MAGI;AAEA,UAAA,KAAI,CAACH,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+BN,IAAI,CAACO,EAAL,GAAU,SAAV,GAAsB,OAArD;AAEH;AAEJ,OAXD;AAYH;;;6BACM;AAGP,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOA;;;;EA3BwBjB,S;;AAiC5B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/BT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,SAAM;AACFZ,IAAAA,IAAI,EAAEY,KAAK,CAACjB,QAAN,CAAeK,IADnB;AAEFM,IAAAA,OAAO,EAAEM,KAAK,CAACjB,QAAN,CAAeW;AAFtB,GAAN;AAID,CAPH;;AAUE,eAAeV,OAAO,CAACe,eAAD,EAAkB,IAAlB,CAAP,CAAgCZ,aAAhC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { View, Text, ActivityIndicator } from \"react-native\"\nimport styles from './styles';\nimport * as firebase from 'firebase'\n\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nclass LoadingScreen extends Component{\n\n    componentDidMount() {\n        //console.log(this.props)\n        firebase.auth().onAuthStateChanged(user => {\n           console.log(this.props.profile)\n            if(!user){\n                this.props.navigation.navigate(\"Login\");\n            }\n            else{\n\n                this.props.navigation.navigate(user.eb ? \"Inicial\" : \"Token\");\n\n            }\n            \n        });\n    }\n   render(){\n\n\n    return (\n        <View style={styles.container}>\n            <Text>Carregando...</Text>\n            <ActivityIndicator size='large'></ActivityIndicator>\n        </View>\n\n    )\n   }\n        \n\n    \n}\n\nconst mapStateToProps = (state) => {\n\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    }\n  }\n  \n\n  export default connect(mapStateToProps, null) (LoadingScreen)\n\n"]},"metadata":{},"sourceType":"module"}