{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thabataganga/Documentos/idook/idook-native/src/auth/login/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport logoImg from \"../../assets/idook.png\";\nimport logoCliente from \"../../assets/sindpd.png\";\nimport styles from \"./styles\";\nimport { changeLoginEmail, changeLoginPassword } from \"../../store/actions\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"onLoginPress\",\n    value: function onLoginPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      this.props.loginUser({\n        email: email,\n        password: password\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: logoCliente,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: {\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"Ol\\xE1,\"), React.createElement(Text, {\n        style: styles.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"Bem vindo de volta o seu IDook\")), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        value: this.props.email,\n        onChangeText: function onChangeText(text) {\n          return _this.props.changeLoginEmail(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"Senha\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        value: this.props.password,\n        onChangeText: function onChangeText(text) {\n          return _this.props.changeLoginPassword(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, this.props.errorMessage && React.createElement(Text, {\n        style: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }\n      }, this.props.errorMessage)), React.createElement(TouchableOpacity, {\n        onPress: this.onLoginPress.bind(this),\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"Sign in\")), React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 32\n        },\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"Register\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#414959\",\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"Ainda n\\xE3o tem um IDook? \", React.createElement(Text, {\n        style: {\n          fontWeight: \"700\",\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 49\n        }\n      }, \"Registrar\"))), React.createElement(View, {\n        style: {\n          alignItems: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.logo2,\n        source: logoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    email: state.auth.email,\n    password: state.auth.password\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeLoginEmail: changeLoginEmail,\n  changeLoginPassword: changeLoginPassword\n})(LoginScreen);","map":{"version":3,"sources":["/home/thabataganga/Documentos/idook/idook-native/src/auth/login/index.js"],"names":["React","Component","connect","logoImg","logoCliente","styles","changeLoginEmail","changeLoginPassword","LoginScreen","props","email","password","loginUser","container","header","logo","alignItems","title","description","form","marginTop","inputTitle","input","text","errorMessage","error","onLoginPress","bind","button","color","fontWeight","alignSelf","navigation","navigate","fontSize","logo2","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, Image, TextInput, TouchableOpacity } from \"react-native\";\n\nimport { connect } from 'react-redux';\n\nimport logoImg from '../../assets/idook.png';\nimport logoCliente from '../../assets/sindpd.png';\nimport styles from './styles';\n\nimport { \n    changeLoginEmail,\n    changeLoginPassword,\n } from '../../store/actions';\n\nclass LoginScreen extends Component {\n\n    onLoginPress() {\n        const { email, password } = this.props;\n        this.props.loginUser({ email, password });\n      }\n\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <View style={styles.header}>\n                <Image style={styles.logo} source={logoCliente} />\n            </View>  \n            \n            <View style={{alignItems:'flex-start'}}>\n            <Text style={styles.title}>Olá,</Text>\n            <Text style={styles.description}>Bem vindo de volta o seu IDook</Text>\n\n            </View>\n\n                <View style={styles.form}>\n                    <View  style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>Email</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            value={this.props.email}\n                            onChangeText={(text) => this.props.changeLoginEmail(text)}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>Senha</Text>\n                        <TextInput\n                            style={styles.input}\n                            secureTextEntry\n                            autoCapitalize=\"none\"\n                            value={this.props.password}\n                            onChangeText={(text) => this.props.changeLoginPassword(text)}\n                        ></TextInput>\n                    </View>\n                </View>\n\n                <View style={styles.errorMessage}>\n                    {this.props.errorMessage && <Text style={styles.error}>{this.props.errorMessage}</Text>}\n                </View>\n\n                <TouchableOpacity onPress={this.onLoginPress.bind(this)} style={styles.button} >\n                    <Text style={{ color: \"#FFF\", fontWeight: \"500\" }}>Sign in</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={{ alignSelf: \"center\", marginTop: 32 }}\n                    onPress={() => this.props.navigation.navigate(\"Register\")}\n                >\n                    <Text style={{ color: \"#414959\", fontSize: 13 }}>\n                        Ainda não tem um IDook? <Text style={{ fontWeight: \"700\", color: \"#000000\" }}>Registrar</Text>\n                    </Text>\n                </TouchableOpacity>\n\n            <View style={{alignItems:'flex-end'}}>\n                <Image style={styles.logo2} source={logoImg} />\n            </View>\n            </View>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    //console.log(state)\n    return{\n        email: state.auth.email, \n        password: state.auth.password\n    };\n}\n\nexport default connect(mapStateToProps, { \n    changeLoginEmail,\n    changeLoginPassword,\n})(LoginScreen)\n"]},"metadata":{},"sourceType":"module"}