{"ast":null,"code":"import _objectSpread from\"/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var createId=function createId(ids){return function(dispatch,getState,_ref){var getFirestore=_ref.getFirestore;// make async call to database\nvar firestore=getFirestore();var profile=getState().firebase.profile;var authorId=getState().firebase.auth.uid;firestore.collection('ids').add(_objectSpread({},ids,{city:\"Não configurado\",uf:\"Não configurado\",empresa:\"Não configurado\",cargo:'Não configurado',url:\"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\",authorCompany:profile.socialreason,authorId:authorId,createdAt:new Date()})).then(function(){dispatch({type:'CREATE_ID'});}).catch(function(err){dispatch({type:'CREATE_ID_ERROR'},err);});};};export var deleteId=function deleteId(ids){return function(dispatch,getState,_ref2){var getFirestore=_ref2.getFirestore;// make async call to database\nvar firestore=getFirestore();firestore.collection('ids').doc(ids).delete().then(function(){dispatch({type:'DELETE_ID',ids:ids});}).catch(function(err){dispatch({type:'DELETE_ID_ERROR',err:err});});};};export var editId=function editId(ids,id){return function(dispatch,getState,_ref3){var getFirestore=_ref3.getFirestore;// make async call to database\nvar firestore=getFirestore();//  console.log(ids)\n//  console.log(id)\nfirestore.collection('ids').doc(id).update(_objectSpread({},ids)).then(function(){dispatch({type:'EDIT_ID',ids:ids});}).catch(function(err){dispatch({type:'EDIT_ID_ERROR',err:err});});};};","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/store/actions/idActions.js"],"names":["createId","ids","dispatch","getState","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","city","uf","empresa","cargo","url","authorCompany","socialreason","createdAt","Date","then","type","catch","err","deleteId","doc","delete","editId","id","update"],"mappings":"uLAEA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,CAC/B,MAAO,UAACC,QAAD,CAAWC,QAAX,MAA0C,IAAnBC,CAAAA,YAAmB,MAAnBA,YAAmB,CAC/C;AACA,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACA,GAAME,CAAAA,OAAO,CAAGH,QAAQ,GAAGI,QAAX,CAAoBD,OAApC,CACA,GAAME,CAAAA,QAAQ,CAAGL,QAAQ,GAAGI,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C,CACAL,SAAS,CAACM,UAAV,CAAqB,KAArB,EAA4BC,GAA5B,kBACKX,GADL,EAEEY,IAAI,CAAE,iBAFR,CAGEC,EAAE,CAAE,iBAHN,CAIEC,OAAO,CAAE,iBAJX,CAKEC,KAAK,CAAE,iBALT,CAMEC,GAAG,CAAC,sEANN,CAOEC,aAAa,CAAEZ,OAAO,CAACa,YAPzB,CAQEX,QAAQ,CAAEA,QARZ,CASEY,SAAS,CAAE,GAAIC,CAAAA,IAAJ,EATb,IAUGC,IAVH,CAUQ,UAAM,CACZpB,QAAQ,CAAC,CAAEqB,IAAI,CAAE,WAAR,CAAD,CAAR,CACD,CAZD,EAYGC,KAZH,CAYS,SAAAC,GAAG,CAAI,CACdvB,QAAQ,CAAC,CAAEqB,IAAI,CAAE,iBAAR,CAAD,CAA8BE,GAA9B,CAAR,CACD,CAdD,EAeD,CApBD,CAqBD,CAtBM,CAwBP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACzB,GAAD,CAAS,CAC/B,MAAO,UAACC,QAAD,CAAWC,QAAX,OAA0C,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC/C;AACA,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CAIAC,SAAS,CAACM,UAAV,CAAqB,KAArB,EAA4BgB,GAA5B,CAAgC1B,GAAhC,EACG2B,MADH,GAEGN,IAFH,CAEQ,UAAM,CACVpB,QAAQ,CAAC,CAAEqB,IAAI,CAAE,WAAR,CAAqBtB,GAAG,CAAHA,GAArB,CAAD,CAAR,CACD,CAJH,EAIKuB,KAJL,CAIW,SAAAC,GAAG,CAAI,CACdvB,QAAQ,CAAC,CAAEqB,IAAI,CAAE,iBAAR,CAA2BE,GAAG,CAAHA,GAA3B,CAAD,CAAR,CACD,CANH,EAQD,CAdD,CAeD,CAhBM,CAkBP,MAAO,IAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAC5B,GAAD,CAAK6B,EAAL,CAAY,CAChC,MAAO,UAAC5B,QAAD,CAAWC,QAAX,OAA0C,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC/C;AACA,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CAEF;AACA;AAEEC,SAAS,CAACM,UAAV,CAAqB,KAArB,EAA4BgB,GAA5B,CAAgCG,EAAhC,EACGC,MADH,kBAEO9B,GAFP,GAIGqB,IAJH,CAIQ,UAAM,CACVpB,QAAQ,CAAC,CAAEqB,IAAI,CAAE,SAAR,CAAmBtB,GAAG,CAAHA,GAAnB,CAAD,CAAR,CACD,CANH,EAMKuB,KANL,CAMW,SAAAC,GAAG,CAAI,CACdvB,QAAQ,CAAC,CAAEqB,IAAI,CAAE,eAAR,CAAyBE,GAAG,CAAHA,GAAzB,CAAD,CAAR,CACD,CARH,EAUD,CAjBD,CAkBD,CAnBM","sourcesContent":["\n\nexport const createId = (ids) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid\n    firestore.collection('ids').add({\n      ...ids,\n      city: \"Não configurado\",\n      uf: \"Não configurado\",\n      empresa: \"Não configurado\",\n      cargo: 'Não configurado',\n      url:\"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\",\n      authorCompany: profile.socialreason,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_ID' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_ID_ERROR' }, err);\n    });\n  }\n};\n\nexport const deleteId = (ids) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n\n\n\n    firestore.collection('ids').doc(ids)\n      .delete()\n      .then(() => {\n        dispatch({ type: 'DELETE_ID', ids })\n      }).catch(err => {\n        dispatch({ type: 'DELETE_ID_ERROR', err })\n      })\n\n  }\n};\n\nexport const editId = (ids,id) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n\n  //  console.log(ids)\n  //  console.log(id)\n\n    firestore.collection('ids').doc(id)\n      .update({\n        ...ids\n      })\n      .then(() => {\n        dispatch({ type: 'EDIT_ID', ids })\n      }).catch(err => {\n        dispatch({ type: 'EDIT_ID_ERROR', err })\n      })\n\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}