{"ast":null,"code":"var _jsxFileName = \"/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/components/ids/ImageUpload.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { editId } from '../../store/actions/idActions';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport M from \"materialize-css\";\nimport { storage } from '../../config/fbConfig';\nexport class ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdit = e => {\n      e.preventDefault();\n      const {\n        sids\n      } = this.props; //console.log(url);\n      // console.log(sids);\n\n      this.state.image = 'false'; //   this.setState({image: 'false'})\n\n      const ids = this.state;\n      const key = sids.id; //console.log(key)\n\n      this.props.editId(ids, key); //this.props.history.push('/');\n    };\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = () => {\n      const {\n        image\n      } = this.state;\n\n      if (image) {\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n        uploadTask.on('state_changed', snapshot => {\n          // progrss function ....\n          const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          this.setState({\n            progress\n          });\n        }, error => {\n          // error function ....\n          M.toast({\n            html: 'Erro: tente novamente mais tarde',\n            classes: 'rounded'\n          }); // console.log(error);\n        }, () => {\n          // complete function ....\n          storage.ref('images').child(image.name).getDownloadURL().then(url => {\n            //console.log(url);\n            M.toast({\n              html: 'Foto carregada',\n              classes: 'rounded'\n            });\n            this.setState({\n              url\n            });\n          });\n        });\n      } else {\n        M.toast({\n          html: 'Erro: nenhuma imagem selecionada',\n          classes: 'rounded'\n        });\n      }\n    };\n\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  render() {\n    const {\n      vids\n    } = this.props; //console.log(sids.url)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Foto de perfil\",\n      src: this.state.url || vids.url,\n      \"object-fit\": \"cover\",\n      class: \"circular--portraitM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      onChange: this.handleChange,\n      ref: image => this.image = image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn z-depth-0\",\n      onClick: () => this.image.click(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Selecionar\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn z-depth-0\",\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Enviar\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn z-depth-0\",\n      onClick: this.handleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Salvar\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, sids, id) => {\n  //console.log(state);\n  //console.log(sids)\n  //const id = ownProps.match.params.id;\n  const ids = state.firestore.data.ids;\n  const vids = ids[sids.id]; //console.log(vids)\n  //const sids = ids ? ids[id] : null\n\n  return {\n    //id:id,\n    sids: sids,\n    vids: vids //auth: state.firebase.auth\n\n  };\n};\n\nconst mapDistpacthToProps = dispatch => {\n  return {\n    editId: (ids, id) => dispatch(editId(ids, id))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDistpacthToProps), firestoreConnect([{\n  collection: 'ids'\n}]))(ImageUpload);","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/components/ids/ImageUpload.js"],"names":["React","Component","connect","editId","compose","firestoreConnect","M","storage","ImageUpload","constructor","props","handleEdit","e","preventDefault","sids","state","image","ids","key","id","handleChange","target","files","setState","handleUpload","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","toast","html","classes","child","getDownloadURL","then","url","bind","render","vids","display","click","mapStateToProps","firestore","data","mapDistpacthToProps","dispatch","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { editId } from '../../store/actions/idActions'\nimport { compose } from 'redux';\nimport {  firestoreConnect } from 'react-redux-firebase';\nimport M from \"materialize-css\";\n\nimport {storage} from '../../config/fbConfig';\n\n\nexport class ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    }\n    this.handleChange = this\n      .handleChange\n      .bind(this);\n      this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleEdit = (e) => {\n    e.preventDefault();\n    const { sids } = this.props;\n  \n\n    //console.log(url);\n\n   // console.log(sids);\n\n  this.state.image = 'false';\n\n //   this.setState({image: 'false'})\n\n    const ids = this.state;\n\n    const key = sids.id;\n\n    //console.log(key)\n    this.props.editId(ids, key)\n    //this.props.history.push('/');\n}\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({image}));\n    }\n  }\n  handleUpload = () => {\n      const {image} = this.state;\n      if(image){\n\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n        uploadTask.on('state_changed', \n        (snapshot) => {\n          // progrss function ....\n          const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n          this.setState({progress});\n        }, \n        (error) => {\n             // error function ....\n             M.toast({html: 'Erro: tente novamente mais tarde', classes: 'rounded'});\n         // console.log(error);\n        }, \n      () => {\n          // complete function ....\n          storage.ref('images').child(image.name).getDownloadURL().then(url => {\n              //console.log(url);\n              M.toast({html: 'Foto carregada', classes: 'rounded'});\n  \n              this.setState({url});\n          })\n      });\n\n      }\n\n      else{\n        M.toast({html: 'Erro: nenhuma imagem selecionada', classes: 'rounded'});\n      }\n    \n    \n  }\n  render() {\n\n    const {vids} = this.props\n\n    //console.log(sids.url)\n\n    return (\n      <div>\n          <img alt=\"Foto de perfil\" src={this.state.url || vids.url} object-fit='cover' class=\"circular--portraitM\" />\n      <progress value={this.state.progress} max=\"100\"/>\n      <br/>\n        <input \n        style={{display: 'none'}} \n        type=\"file\" \n        onChange={this.handleChange}\n        ref={image => this.image = image}/>\n        <button className=\"btn z-depth-0\" onClick={() => this.image.click()}>Selecionar</button>\n        <button className=\"btn z-depth-0\" onClick={this.handleUpload}>Enviar</button>\n        <button className=\"btn z-depth-0\" onClick={this.handleEdit}>Salvar</button>\n        <br/>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, sids, id) => {\n    //console.log(state);\n    //console.log(sids)\n    //const id = ownProps.match.params.id;\n    const ids = state.firestore.data.ids;\n    const vids = ids[sids.id]\n    //console.log(vids)\n    //const sids = ids ? ids[id] : null\n    return {\n        //id:id,\n        sids: sids,\n        vids: vids,\n        //auth: state.firebase.auth\n    }\n}\n\nconst mapDistpacthToProps = (dispatch) => {\n    return {\n        editId: (ids, id) => dispatch(editId(ids, id)),\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDistpacthToProps),\n    firestoreConnect([\n        { collection: 'ids' }\n    ])\n)(ImageUpload)"]},"metadata":{},"sourceType":"module"}