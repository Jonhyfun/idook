{"ast":null,"code":"var _jsxFileName = \"/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react'; //import Notification from './Notifications';\n//import NewsList from '../news/NewsList';\n//import CalendarList from '../calendar/CalendarList';\n\nimport IdData from '../ids/IdData';\nimport IdList from '../ids/IdList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props)\n    const {\n      ids\n    } = this.props;\n    const {\n      auth,\n      profile\n    } = this.props;\n\n    if (!auth.uid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }\n      });\n    }\n\n    if (ids) {\n      const filteredId = ids.filter(id => id.authorId === auth.uid); //console.log(filteredId)\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col s12 m5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IdData, {\n        ids: filteredId,\n        profile: profile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col s12 m7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IdList, {\n        ids: filteredId,\n        profile: profile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }))));\n    } //const size = ids.length;\n    //console.log(ids)\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Carregando...\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //console.log(state.firestore.ordered.news);\n  //console.log(state);\n  return {\n    news: state.firestore.ordered.news,\n    profile: state.firebase.profile,\n    calendar: state.firestore.ordered.calendar,\n    ids: state.firestore.ordered.ids,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'news'\n}, {\n  collection: 'calendar'\n}, {\n  collection: 'ids'\n}]))(Dashboard);","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","IdData","IdList","connect","firestoreConnect","compose","Redirect","Dashboard","render","ids","props","auth","profile","uid","filteredId","filter","id","authorId","mapStateToProps","state","news","firestore","ordered","firebase","calendar","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,MAAM,GAAG;AACN;AACA,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKC,KAAnB;AAEA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAkB,KAAKF,KAA7B;;AAEA,QAAI,CAACC,IAAI,CAACE,GAAV,EAAe;AACd,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAGJ,GAAH,EAAO;AACL,YAAMK,UAAU,GAAGL,GAAG,CAACM,MAAJ,CAAWC,EAAE,IAAIA,EAAE,CAACC,QAAH,KAAgBN,IAAI,CAACE,GAAtC,CAAnB,CADK,CAEL;;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEC,UAAb;AAAyB,QAAA,OAAO,EAAEF,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEE,UAAb;AAAyB,QAAA,OAAO,EAAEF,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAFJ,CADJ;AAiBD,KA/BM,CAkCN;AACA;;;AACC,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKH;;AA1C6B;;AA6ClC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA;AACA,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBF,IAD3B;AAEHR,IAAAA,OAAO,EAAEO,KAAK,CAACI,QAAN,CAAeX,OAFrB;AAGHY,IAAAA,QAAQ,EAAEL,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBE,QAH/B;AAIHf,IAAAA,GAAG,EAAEU,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBb,GAJ1B;AAKHE,IAAAA,IAAI,EAAEQ,KAAK,CAACI,QAAN,CAAeZ;AALlB,GAAP;AAOH,CAVD;;AAYA,eAAeN,OAAO,CAClBF,OAAO,CAACe,eAAD,CADW,EAElBd,gBAAgB,CAAC,CACb;AAAEqB,EAAAA,UAAU,EAAE;AAAd,CADa,EAEb;AAAEA,EAAAA,UAAU,EAAE;AAAd,CAFa,EAGb;AAAEA,EAAAA,UAAU,EAAE;AAAd,CAHa,CAAD,CAFE,CAAP,CAOXlB,SAPW,CAAf","sourcesContent":["import React, {Component} from 'react';\n//import Notification from './Notifications';\n//import NewsList from '../news/NewsList';\n//import CalendarList from '../calendar/CalendarList';\nimport IdData from '../ids/IdData';\nimport IdList from '../ids/IdList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render (){\n       //console.log(this.props)\n       const {ids} = this.props;\n\n       const {auth, profile} = this.props;\n\n       if (!auth.uid) {\n        return <Redirect to=\"/home\" />;\n      }\n\n      if(ids){\n        const filteredId = ids.filter(id => id.authorId === auth.uid);\n        //console.log(filteredId)\n\n        return(\n            <div className=\"dashboard container\">\n                \n                <div className='row'>\n                    <div className='col s12 m5'>\n                        <IdData ids={filteredId} profile={profile}/>\n                    </div>\n                    <div className='col s12 m7'>\n                        <IdList ids={filteredId} profile={profile}/>\n                    </div>\n                </div>\n\n                \n\n                \n            </div>\n        )\n      }\n\n       \n       //const size = ids.length;\n       //console.log(ids)\n        return(\n            <div className='container center'>\n                <p>Carregando...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state.firestore.ordered.news);\n    //console.log(state);\n    return {\n        news: state.firestore.ordered.news,\n        profile: state.firebase.profile,\n        calendar: state.firestore.ordered.calendar,\n        ids: state.firestore.ordered.ids,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'news' },\n        { collection: 'calendar' },\n        { collection: 'ids' }\n      ])\n  )(Dashboard)"]},"metadata":{},"sourceType":"module"}