{"ast":null,"code":"export const createId = ids => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('ids').add({ ...ids,\n      city: \"Não configurado\",\n      uf: \"Não configurado\",\n      empresa: \"Não configurado\",\n      cargo: 'Não configurado',\n      url: \"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\",\n      authorCompany: profile.socialreason,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: 'CREATE_ID'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_ID_ERROR'\n      }, err);\n    });\n  };\n};\nexport const deleteId = ids => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore.collection('ids').doc(ids).delete().then(() => {\n      dispatch({\n        type: 'DELETE_ID',\n        ids\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'DELETE_ID_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const editId = (ids, id) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore(); //  console.log(ids)\n    //  console.log(id)\n\n    firestore.collection('ids').doc(id).update({ ...ids\n    }).then(() => {\n      dispatch({\n        type: 'EDIT_ID',\n        ids\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'EDIT_ID_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/store/actions/idActions.js"],"names":["createId","ids","dispatch","getState","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","city","uf","empresa","cargo","url","authorCompany","socialreason","createdAt","Date","then","type","catch","err","deleteId","doc","delete","editId","id","update"],"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAIC,GAAD,IAAS;AAC/B,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAC/C;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,OAAO,GAAGH,QAAQ,GAAGI,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGL,QAAQ,GAAGI,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACAL,IAAAA,SAAS,CAACM,UAAV,CAAqB,KAArB,EAA4BC,GAA5B,CAAgC,EAC9B,GAAGX,GAD2B;AAE9BY,MAAAA,IAAI,EAAE,iBAFwB;AAG9BC,MAAAA,EAAE,EAAE,iBAH0B;AAI9BC,MAAAA,OAAO,EAAE,iBAJqB;AAK9BC,MAAAA,KAAK,EAAE,iBALuB;AAM9BC,MAAAA,GAAG,EAAC,sEAN0B;AAO9BC,MAAAA,aAAa,EAAEZ,OAAO,CAACa,YAPO;AAQ9BX,MAAAA,QAAQ,EAAEA,QARoB;AAS9BY,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AATmB,KAAhC,EAUGC,IAVH,CAUQ,MAAM;AACZpB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAZD,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACdvB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE;AAAR,OAAD,EAA8BE,GAA9B,CAAR;AACD,KAdD;AAeD,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMC,QAAQ,GAAIzB,GAAD,IAAS;AAC/B,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAC/C;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAIAC,IAAAA,SAAS,CAACM,UAAV,CAAqB,KAArB,EAA4BgB,GAA5B,CAAgC1B,GAAhC,EACG2B,MADH,GAEGN,IAFH,CAEQ,MAAM;AACVpB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,WAAR;AAAqBtB,QAAAA;AAArB,OAAD,CAAR;AACD,KAJH,EAIKuB,KAJL,CAIWC,GAAG,IAAI;AACdvB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,iBAAR;AAA2BE,QAAAA;AAA3B,OAAD,CAAR;AACD,KANH;AAQD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMI,MAAM,GAAG,CAAC5B,GAAD,EAAK6B,EAAL,KAAY;AAChC,SAAO,CAAC5B,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAC/C;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B,CAF+C,CAIjD;AACA;;AAEEC,IAAAA,SAAS,CAACM,UAAV,CAAqB,KAArB,EAA4BgB,GAA5B,CAAgCG,EAAhC,EACGC,MADH,CACU,EACN,GAAG9B;AADG,KADV,EAIGqB,IAJH,CAIQ,MAAM;AACVpB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,SAAR;AAAmBtB,QAAAA;AAAnB,OAAD,CAAR;AACD,KANH,EAMKuB,KANL,CAMWC,GAAG,IAAI;AACdvB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,eAAR;AAAyBE,QAAAA;AAAzB,OAAD,CAAR;AACD,KARH;AAUD,GAjBD;AAkBD,CAnBM","sourcesContent":["\n\nexport const createId = (ids) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid\n    firestore.collection('ids').add({\n      ...ids,\n      city: \"Não configurado\",\n      uf: \"Não configurado\",\n      empresa: \"Não configurado\",\n      cargo: 'Não configurado',\n      url:\"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\",\n      authorCompany: profile.socialreason,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_ID' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_ID_ERROR' }, err);\n    });\n  }\n};\n\nexport const deleteId = (ids) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n\n\n\n    firestore.collection('ids').doc(ids)\n      .delete()\n      .then(() => {\n        dispatch({ type: 'DELETE_ID', ids })\n      }).catch(err => {\n        dispatch({ type: 'DELETE_ID_ERROR', err })\n      })\n\n  }\n};\n\nexport const editId = (ids,id) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n\n  //  console.log(ids)\n  //  console.log(id)\n\n    firestore.collection('ids').doc(id)\n      .update({\n        ...ids\n      })\n      .then(() => {\n        dispatch({ type: 'EDIT_ID', ids })\n      }).catch(err => {\n        dispatch({ type: 'EDIT_ID_ERROR', err })\n      })\n\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}