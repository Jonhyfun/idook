{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({ ...newUser,\n        createdAt: new Date(),\n        url: \"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\",\n        website: 'Não configurado',\n        facebook: 'Não configurado',\n        whatsapp: 'Não configurado',\n        linkedin: 'Não configurado',\n        instagram: 'Não configurado',\n        twitter: 'Não configurado'\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const editUser = (ids, id) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore.collection('users').doc(id).update({ ...ids\n    }).then(() => {\n      dispatch({\n        type: 'EDIT_USER',\n        ids\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'EDIT_USER_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","createdAt","Date","url","website","facebook","whatsapp","linkedin","instagram","twitter","editUser","ids","id","update"],"mappings":"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","sourcesContent":["export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n      \n      firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n  }\n\n  export const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n  \n      firebase.auth().signOut().then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\n      });\n    }\n  }\n\n  export const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          ...newUser,\n      createdAt: new Date(),\n      url:\"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\",\n      website:'Não configurado',\n      facebook:'Não configurado',\n      whatsapp:'Não configurado',\n      linkedin: 'Não configurado',\n      instagram:'Não configurado',\n      twitter:'Não configurado'\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }\n\n  export const editUser = (ids,id) => {\n    return (dispatch, getState, { getFirestore }) => {\n      // make async call to database\n      const firestore = getFirestore();\n  \n      firestore.collection('users').doc(id)\n        .update({\n          ...ids\n        })\n        .then(() => {\n          dispatch({ type: 'EDIT_USER', ids })\n        }).catch(err => {\n          dispatch({ type: 'EDIT_USER_ERROR', err })\n        })\n  \n    }\n  };"]},"metadata":{},"sourceType":"module"}