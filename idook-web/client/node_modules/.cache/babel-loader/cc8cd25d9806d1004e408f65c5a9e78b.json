{"ast":null,"code":"var _jsxFileName = \"/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/components/ids/MultiplesID.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport csv from 'csv';\nimport { createId } from '../../store/actions/idActions';\nimport { connect } from 'react-redux';\nimport M from \"materialize-css\";\n\nclass MultiplesID extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      cpf: '',\n      email: '',\n      phone: '',\n      matricula: '',\n      validade: '',\n      newUser: [],\n      size: 0\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const data = this.state.newUser; //  console.log(data);\n\n      for (var i = 0; i < data.length; i++) {\n        // console.log(this.state.newUser[i])\n        this.props.createId(this.state.newUser[i]);\n      }\n\n      ; //this.props.createId(this.state)\n      // this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    // Auto initialize all the things!\n    M.AutoInit();\n  }\n\n  onDrop(files) {\n    this.setState({\n      files\n    });\n    var file = files[0]; //    console.log(file)\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      csv.parse(reader.result, (err, data) => {\n        //   console.log(data)\n        this.size = data.length; //        console.log(this.size)\n\n        for (var i = 0; i < data.length; i++) {\n          this.setState({\n            firstName: data[i][0]\n          });\n          this.setState({\n            lastName: data[i][1]\n          });\n          this.setState({\n            cpf: data[i][2]\n          });\n          this.setState({\n            email: data[i][3]\n          });\n          this.setState({\n            phone: data[i][4]\n          });\n          this.setState({\n            matricula: data[i][5]\n          });\n          this.setState({\n            validade: data[i][6]\n          });\n          const strings = {\n            \"firstName\": this.state.firstName,\n            \"lastName\": this.state.lastName,\n            \"cpf\": this.state.cpf,\n            \"email\": this.state.email,\n            \"phone\": this.state.phone,\n            \"matricula\": this.state.matricula,\n            \"validade\": this.state.validade\n          }; //this.setState({newUser[i]: strings})\n\n          this.state.newUser[i] = strings;\n        }\n\n        ;\n        M.toast({\n          html: this.size + ' IDooks carregados',\n          classes: 'rounded'\n        });\n      });\n    };\n\n    reader.readAsBinaryString(file);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDropAccepted: this.onDrop.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn z-depth-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Selecionar\")))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn z-depth-0\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Salvar\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createId: id => dispatch(createId(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplesID);","map":{"version":3,"sources":["/home/thabataganga/Documentos/GITHUB/idook/idook/idook-web/client/src/components/ids/MultiplesID.js"],"names":["React","Component","Dropzone","csv","createId","connect","M","MultiplesID","state","firstName","lastName","cpf","email","phone","matricula","validade","newUser","size","handleSubmit","e","preventDefault","data","i","length","props","componentDidMount","AutoInit","onDrop","files","setState","file","reader","FileReader","onload","parse","result","err","strings","toast","html","classes","readAsBinaryString","render","bind","getRootProps","getInputProps","mapStateToProps","auth","firebase","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,iBAAd;;AAKA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAOlCO,KAPkC,GAO1B;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,GAAG,EAAE,EAHC;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,SAAS,EAAE,EANL;AAONC,MAAAA,QAAQ,EAAE,EAPJ;AAQNC,MAAAA,OAAO,EAAE,EARH;AASNC,MAAAA,IAAI,EAAE;AATA,KAP0B;;AAAA,SAoBlCC,YApBkC,GAoBlBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAAG,KAAKb,KAAL,CAAWQ,OAAxB,CAFoB,CAGtB;;AAEE,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAEjC;AAED,aAAKE,KAAL,CAAWpB,QAAX,CAAoB,KAAKI,KAAL,CAAWQ,OAAX,CAAmBM,CAAnB,CAApB;AAGC;;AAAA,OAZe,CAapB;AACA;AACD,KAnCiC;AAAA;;AAElCG,EAAAA,iBAAiB,GAAG;AAClB;AACAnB,IAAAA,CAAC,CAACoB,QAAF;AACH;;AAgCCC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AAEZ,SAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd;AAEA,QAAIE,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAhB,CAJY,CAMhB;;AAEI,UAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AACpB9B,MAAAA,GAAG,CAAC+B,KAAJ,CAAUH,MAAM,CAACI,MAAjB,EAAyB,CAACC,GAAD,EAAMf,IAAN,KAAe;AAIzC;AAEG,aAAKJ,IAAL,GAAYI,IAAI,CAACE,MAAjB,CANsC,CAQ9C;;AAGQ,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,eAAKO,QAAL,CAAc;AAACpB,YAAAA,SAAS,EAAEY,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAZ,WAAd;AACA,eAAKO,QAAL,CAAc;AAACnB,YAAAA,QAAQ,EAAEW,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAX,WAAd;AACA,eAAKO,QAAL,CAAc;AAAClB,YAAAA,GAAG,EAAEU,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAN,WAAd;AACA,eAAKO,QAAL,CAAc;AAACjB,YAAAA,KAAK,EAAES,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAR,WAAd;AACA,eAAKO,QAAL,CAAc;AAAChB,YAAAA,KAAK,EAAEQ,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAR,WAAd;AACA,eAAKO,QAAL,CAAc;AAACf,YAAAA,SAAS,EAAEO,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAZ,WAAd;AACA,eAAKO,QAAL,CAAc;AAACd,YAAAA,QAAQ,EAAEM,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR;AAAX,WAAd;AAEA,gBAAMe,OAAO,GAAG;AAAC,yBAAa,KAAK7B,KAAL,CAAWC,SAAzB;AAAoC,wBAAY,KAAKD,KAAL,CAAWE,QAA3D;AAAqE,mBAAO,KAAKF,KAAL,CAAWG,GAAvF;AAA4F,qBAAS,KAAKH,KAAL,CAAWI,KAAhH;AAAuH,qBAAS,KAAKJ,KAAL,CAAWK,KAA3I;AAAkJ,yBAAa,KAAKL,KAAL,CAAWM,SAA1K;AAAqL,wBAAY,KAAKN,KAAL,CAAWO;AAA5M,WAAhB,CAToC,CAWrC;;AAGA,eAAKP,KAAL,CAAWQ,OAAX,CAAmBM,CAAnB,IAAwBe,OAAxB;AAEA;;AAAA;AAED/B,QAAAA,CAAC,CAACgC,KAAF,CAAQ;AAACC,UAAAA,IAAI,EAAE,KAAKtB,IAAL,GAAY,oBAAnB;AAAyCuB,UAAAA,OAAO,EAAE;AAAlD,SAAR;AAA6E,OA7B/E;AA8BD,KA/BD;;AAiCAT,IAAAA,MAAM,CAACU,kBAAP,CAA0BX,IAA1B;AACD;;AAEDY,EAAAA,MAAM,GAAG;AAIP,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAE,KAAKf,MAAL,CAAYgB,IAAZ,CAAiB,IAAjB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CAFJ,CAFF,eAaE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,KAAK3B,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CAFF;AAwBD;;AA9GiC;;AAiHpC,MAAM4B,eAAe,GAAItC,KAAD,IAAW;AACjC;AACA,SAAO;AACLuC,IAAAA,IAAI,EAAEvC,KAAK,CAACwC,QAAN,CAAeD;AADhB,GAAP;AAGD,CALD;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL9C,IAAAA,QAAQ,EAAG+C,EAAD,IAAQD,QAAQ,CAAC9C,QAAQ,CAAC+C,EAAD,CAAT;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAe9C,OAAO,CAACyC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1C,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport csv from 'csv';\nimport { createId } from '../../store/actions/idActions'\nimport { connect } from 'react-redux'\nimport M from \"materialize-css\";\n\n\n\n\nclass MultiplesID extends Component {\n\n  componentDidMount() {\n    // Auto initialize all the things!\n    M.AutoInit();\n}\n\n  state = {\n    firstName: '',\n    lastName: '',\n    cpf: '',\n    email: '',\n    phone: '',\n    matricula: '',\n    validade: '',\n    newUser: [],\n    size: 0\n\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const data = this.state.newUser\n  //  console.log(data);\n\n    for (var i = 0; i < data.length; i++) {\n          \n         // console.log(this.state.newUser[i])\n\n        this.props.createId(this.state.newUser[i])\n\n\n        };\n    //this.props.createId(this.state)\n    // this.props.history.push('/');\n  }\n\n  onDrop(files) {\n\n    this.setState({ files });\n\n    var file = files[0];\n\n//    console.log(file)\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      csv.parse(reader.result, (err, data) => {\n\n        \n\n     //   console.log(data)\n\n        this.size = data.length\n\n//        console.log(this.size)\n\n\n        for (var i = 0; i < data.length; i++) {\n          this.setState({firstName: data[i][0]})\n          this.setState({lastName: data[i][1]})\n          this.setState({cpf: data[i][2]})\n          this.setState({email: data[i][3]})\n          this.setState({phone: data[i][4]})\n          this.setState({matricula: data[i][5]})\n          this.setState({validade: data[i][6]})\n\n          const strings = {\"firstName\": this.state.firstName, \"lastName\": this.state.lastName, \"cpf\": this.state.cpf, \"email\": this.state.email, \"phone\": this.state.phone, \"matricula\": this.state.matricula, \"validade\": this.state.validade }\n\n         //this.setState({newUser[i]: strings})\n        \n\n         this.state.newUser[i] = strings;\n\n        };\n\n        M.toast({html: this.size + ' IDooks carregados', classes: 'rounded'});      });\n    };\n\n    reader.readAsBinaryString(file);\n  }\n\n  render() {\n\n  \n\n    return (\n\n      <div>\n\n        <Dropzone onDropAccepted={this.onDrop.bind(this)}>\n          {({ getRootProps, getInputProps }) => (\n            <section>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <button className=\"btn z-depth-0\" >Selecionar</button>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n\n        <button className=\"btn z-depth-0\" onClick={this.handleSubmit}>Salvar</button>\n\n      </div>\n\n\n\n\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(state);\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createId: (id) => dispatch(createId(id)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplesID)"]},"metadata":{},"sourceType":"module"}